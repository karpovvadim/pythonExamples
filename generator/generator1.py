def my_gen():
    yield "A"
    yield "B"
    yield "C"


if __name__ == "__main__":
    iter1 = my_gen()
    print(iter1.__next__())
    print(next(iter1))
    print(iter1.__next__())

"""
Вызвали функцию-генератор, которая возвращает экземпляр итератора. На этом
этапе ни одна строка внутри my_gen () не выполняется.
2. Используя экземпляр итератора, вызвали метод _next_, который начинает 
выполнение функции my_gen(), приостанавливается после выполнения первой 
инструкции yield и возвращает букву "А".
3. Затем вызываем функцию next() в экземпляре итератора. Результат будет таким
же, как при использовании метода _next_. Но в этом случае функция my_gen()
начинает выполнение со строки, идущей следом за той, на которой она остановилась
в последний раз из-за оператора yield. На следующей строке находится
другой оператор yield, поэтому после вывода буквы "В" происходит еще одна пауза.
4. Следующий метод _next_ приведет к выполнению очередного оператора yield,
который вернет букву "С".
"""